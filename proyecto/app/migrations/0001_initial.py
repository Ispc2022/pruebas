# Generated by Django 4.2.2 on 2023-06-13 02:21

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('dni', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=1)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('telefono', models.IntegerField()),
                ('password', models.CharField(max_length=45)),
            ],
            options={
                'verbose_name': 'Paciente Registrado',
                'verbose_name_plural': 'Pacientes',
                'db_table': 'Paciente',
            },
        ),
        migrations.CreateModel(
            name='Planes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('precio', models.IntegerField(unique=True)),
                ('nombre', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Plan Disponible',
                'verbose_name_plural': 'Planes',
                'db_table': 'Plan',
            },
        ),
        migrations.CreateModel(
            name='Terapia',
            fields=[
                ('id_terapia', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Tipo de Terapia',
                'verbose_name_plural': 'Terapias',
                'db_table': 'Terapia',
            },
        ),
        migrations.CreateModel(
            name='Ubicacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provincia', models.CharField(max_length=45)),
                ('localidad', models.CharField(max_length=45)),
            ],
            options={
                'verbose_name': 'Ubicacion',
                'verbose_name_plural': 'Ubicaciones',
                'db_table': 'Ubicacion',
            },
        ),
        migrations.CreateModel(
            name='Profesional',
            fields=[
                ('dni', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(default='12345678', max_length=45)),
                ('matricula', models.IntegerField(unique=True)),
                ('id_terapia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.terapia')),
                ('localidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profesionales_localidad', to='app.ubicacion')),
                ('provincia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ubicacion')),
            ],
            options={
                'verbose_name': 'Profesional Registrado',
                'verbose_name_plural': 'Profesionales',
                'db_table': 'Profesional',
            },
        ),
        migrations.CreateModel(
            name='PagosSuscripciones',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_pago', models.CharField(max_length=20)),
                ('id_plan_p', models.IntegerField()),
                ('fecha', models.DateField()),
                ('vencimiento', models.DateField()),
                ('dni_pac', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.paciente')),
            ],
            options={
                'verbose_name': 'Estado de Pagos',
                'verbose_name_plural': 'Pagos',
                'db_table': 'Pagos',
            },
        ),
        migrations.AddField(
            model_name='paciente',
            name='id_terapia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.terapia'),
        ),
        migrations.AddField(
            model_name='paciente',
            name='localidad',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pacientes_localidad', to='app.ubicacion'),
        ),
        migrations.AddField(
            model_name='paciente',
            name='provincia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pacientes_provincia', to='app.ubicacion'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=150, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
